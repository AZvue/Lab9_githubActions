name: pipeline.yml CI/CD

on:
  push:
    branches:
      - lab9
  pull_request:
    branches:
      - lab9

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: '.'

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: setup pnpm environment
        uses: pnpm/action-setup@v2
        with:
          version: 7.1.7

      - name: build
        run: |
          pnpm install
          pnpm build

      - name: Upload artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: vue2048
          path: dist/

  test:
    if: ${{ github.event_name == 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name : Static Analysis
        run : |
          echo "pnpm type-check"
          echo "pnpm eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore"

      - name : Run Tests
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint
          pnpm run test
 
 
  deploy :
    name : deploy
    needs : build 
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps: 
    - name : download artifact
      uses: actions/download-artifact@v2.1.1
      with : 
        name : artifact-build
        path : ${{github.workspace}} 
    - name : deploy qa
      uses: Azure/static-web-apps-deploy@v1
      with:
        action: upload 
        azure_static_web_apps_api_token: ${{ secrets.AZURE_TOKEN_PROD }}
        app_artifact_location: ${{github.workspace}} 
        
        
    - name : deploy prod
      uses: Azure/static-web-apps-deploy@v1
      with:
        action: upload 
        azure_static_web_apps_api_token: ${{ secrets.AZURE_TOKEN_QA }}
        app_artifact_location: ${{github.workspace}} 
 

