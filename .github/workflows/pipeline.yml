name: pipeline.yml CI/CD

on:
  push:
    branches:
      - lab9
  pull_request:
    branches:
      - lab9
  schedule:
    - cron: '0 8 * * 1'
  workflow_dispatch:
    inputs:
      run-static-analysis:
        description: 'Run static analysis ?'
        required: false
        default: true
      run-tests:
        description: 'Run tests ?'
        required: false
        default: true
      run-Linter:
        description: 'Run Linter ?'
        required: false
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: '.'

      - name: Setup Caches
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/pnpm-lock.yaml') }}-Vue2048
          restore-keys: |
            ${{ runner.os }}-build-
          compression-level: 9

      - name: Setup PNPM
        uses: pnpm/action-setup@v2

      - name: build
        run: |
          pnpm install
          pnpm build

      - name: Upload artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: vue2048
          path: dist/
          retention-days: ${{ github.ref == 'refs/heads/lab9' && 7 || 1 }}

  test:
    #if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && inputs.run-tests == 'true' || github.event_name == 'workflow_dispatch' && inputs.run-static-analysis == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps: 
    
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm ci
        
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Run Unit Tests
        #if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && inputs.run-tests == 'true' 
        run: |
          pnpm vitest
          
      - name: Run Linter
        #if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && inputs.run-Linter == 'true'
        run: |
          pnpm eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore
          
      - name: Run static typing
        #if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && inputs.run-static-analysis == 'true'
        run: |
          pnpm type-check
 
 
  deploy :
    name : deploy
    needs : build 
    runs-on: ubuntu-latest
    steps: 
    - name : download artifact
      uses: actions/download-artifact@v2.1.1
      with : 
        name : vue2048
        path : ${{github.workspace}} 
    - name : deploy qa
      uses: Azure/static-web-apps-deploy@v1
      with:
        action: upload 
        azure_static_web_apps_api_token: ${{ secrets.AZURE_TOKEN_PROD }}
        app_artifact_location: ${{github.workspace}} 
        
        
    - name : deploy prod
      uses: Azure/static-web-apps-deploy@v1
      with:
        action: upload 
        azure_static_web_apps_api_token: ${{ secrets.AZURE_TOKEN_QA }}
        app_artifact_location: ${{github.workspace}} 
 

